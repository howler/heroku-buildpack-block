#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

### Configure environment

set -o errexit    # always exit on error
set -o pipefail   # don't ignore exit codes when piping output
set -o nounset    # fail on unset variables
unset GIT_DIR     # Avoid GIT_DIR leak from previous build steps

### Configure directories
BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
BP_DIR=$(cd $(dirname ${0:-}); cd ..; pwd)
LOG_FILE='/tmp/node-build-log.txt'

### Set variables to check
SOURCE_VERSION=${SOURCE_VERSION}
CURRENT_TIME=$(date +%T)
# Times are UTC
MIN_TIME='07:00:00'
MAX_TIME='08:30:00'
DAY_OF_THE_WEEK=$(date +%u)
WHITE_LISTED_SOURCE_VERSION=$(cat $ENV_DIR/WHITE_LISTED_SOURCE_VERSION)

echo "CURRENT_TIME = $CURRENT_TIME"
echo "MIN_TIME = $MIN_TIME"
echo "MAX_TIME = $MAX_TIME"
echo "DAY_OF_THE_WEEK = $DAY_OF_THE_WEEK"
echo "SOURCE_VERSION = $SOURCE_VERSION"
echo "WHITE_LISTED_SOURCE_VERSION = $WHITE_LISTED_SOURCE_VERSION"

if [[ "$SOURCE_VERSION" == "$WHITE_LISTED_SOURCE_VERSION" ]]
then
  echo "Current source version is whitelisted"
else
  if [[ "$CURRENT_TIME" < "$MIN_TIME" ]]
  then
    echo "CURRENT_TIME < MIN_TIME"
    echo "Blocked!"
    exit 1
  fi

  if [[ "$CURRENT_TIME" > "$MAX_TIME" ]]
  then
    echo "CURRENT_TIME > MAX_TIME"
    echo "Blocked!"
    exit 1
  fi

  if [ $DAY_OF_THE_WEEK -gt 5 ]
  then
    echo "It's the weekend."
    echo "Blocked!"
    exit 1
  fi
fi
